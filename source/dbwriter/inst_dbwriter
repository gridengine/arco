#!/bin/sh
#
#
#  Installation script for the ARCo dbwriter module
#
#  Scriptname: inst_dbwriter
#
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

AUTO=false

umask 022

DBWRITER_PWD=`pwd`
CLEAR=clear
$CLEAR

cd ..

. ./util/arch_variables
. ./util/install_modules/inst_common.sh
. ./util/install_modules/inst_qmaster.sh

CP=$DBWRITER_PWD/lib/arco_common.jar:$DBWRITER_PWD/lib/dbwriter.jar

BasicSettings
SetUpInfoText
EnterPW_oldmods=`stty -g`

. $DBWRITER_PWD/inst_util.sh

# ------------------------------------------------------------------------------
#  This function determine if the 32-bit or 64-bit version of java is
#  installed.
#  Depend on the version of java the JAVA_LIBRARY_PATH is set to the 32-Bit
#  or 64-Bit version of libjuti.so
#  Assumes that JAVA_HOME, ARCH , DBWRITER_PWD and NUM_JAVA_VERSION is set
# ------------------------------------------------------------------------------
queryJavaDataModel() {
   if [ "$JAVA_HOME" = "" ]; then
     $INFOTEXT -n "Error: JAVA_HOME not set\n"
     exit 1
   fi
   if [ $NUM_JAVA_VERSION -lt 14200 ]; then
      # java before 1.4.2 has no -d32 or -d64 option
      JAVA_DATA_MODEL=""
   else
      # for 64-bit platform we try to use the 64-bit datamodel
      case "$ARCH" in
        *64)  JAVA_DATA_MODEL="-d64";;
          *)  JAVA_DATA_MODEL="";;
      esac
   fi
   
   JAVA_LIBRARY_PATH=$SGE_ROOT/lib/$ARCH
   $JAVA_HOME/bin/java $JAVA_DATA_MODEL -cp $DBWRITER_PWD/lib/arco_common.jar \
                       -Djava.library.path=$JAVA_LIBRARY_PATH \
                       com.sun.grid.util.GetPid > /dev/null 2>&1
   if [ $? -ne 0 ]; then
   
      if [ "$JAVA_DATA_MODEL" = "" ]; then
         # we have no -d32/-d64 switch, give up
         $INFOTEXT "ERROR: java can not load libjuti.so. dbwriter will not work"
         exit 1
      fi
      
      JAVA_DATA_MODEL=""      
      case "$ARCH" in
        sol-sparc64)  NEW_ARCH="sol-sparc";;
          sol-amd64)  NEW_ARCH="sol-x86";;
         lx24-amd64)  NEW_ARCH="lx24-x86";;
                  *)
           # we have a 32-bit platform, however libjuti.so cound not be loaded
           # exit with an errlr
           $INFOTEXT "ERROR: java can not load libjuti.so. dbwriter will not work"
           exit 1
      esac
      JAVA_LIBRARY_PATH=$SGE_ROOT/lib/$NEW_ARCH
      
      if [ ! -d $JAVA_LIBRARY_PATH ]; then
         $INFOTEXT "\nERROR: This java version does not support 64-bit native libraries,"
         $INFOTEXT "       The use of libjuti.so from the $NEW_ARCH binaries would be "
         $INFOTEXT "       possible, but the packages are not installed."
         $INFOTEXT "       Install a 64-Bit java version or the @@GRID_ENGINE_NAME@@ 32-bit binary packages"
         $INFOTEXT "       for the architecture ${NEW_ARCH}!"
         exit 1
      fi
      
      $JAVA_HOME/bin/java $JAVA_DATA_MODEL -cp $DBWRITER_PWD/lib/arco_common.jar \
                          -Djava.library.path=$JAVA_LIBRARY_PATH \
                          com.sun.grid.util.GetPid > /dev/null 2>&1
      if [ $? -ne 0 ]; then
           $INFOTEXT "ERROR: java can not load libjuti.so. dbwriter will not work"
           exit 1
      else
         JAVA_LIBRARY_PATH="\$SGE_ROOT/lib/$NEW_ARCH"

         $INFOTEXT "\nWARNING: This java version does not support 64-bit native libraries,"
         $INFOTEXT "         dbwriter will use the 32-bit version of libjuti.so"
         $INFOTEXT "         from (<SGE_ROOT>/lib/$NEW_ARCH)\n".
         $INFOTEXT -wait -n "Hit <RETURN> to continue >> "
      fi
   else
      JAVA_LIBRARY_PATH="\$SGE_ROOT/lib/$ARCH"
   fi
}

queryDbwriterParams()
{
   prompt_user=$1
   if [ $prompt_user -eq 1 ]; then
      $CLEAR
      $INFOTEXT -u "\nGeneric parameters"

      # dbwriter interval
      if [ "$DBWRITER_INTERVAL" = "" ]; then
         DBWRITER_INTERVAL=60
      fi
      dummy=$DBWRITER_INTERVAL
      while :
      do
         $INFOTEXT -n "\nEnter the interval between two dbwriter runs in seconds [$dummy] >> "
         DBWRITER_INTERVAL=`Enter $dummy`
         expr $DBWRITER_INTERVAL + 1 > /dev/null 2> /dev/null
         if [ $? -le 1 ]; then
            break
         else
            $INFOTEXT "the interval must be a numerical string"
         fi
      done

      #In SGE the path of the report file is fix
      #We don't need to query this parameter
      #dummy="\$SGE_ROOT/\$SGE_CELL/common/reporting"
      #$INFOTEXT -n "\nEnter the @@GRID_ENGINE_NAME@@ reporting file [$dummy] >> "
      #DBWRITER_REPORTING_FILE=`Enter $dummy`
      if [ "$DBWRITER_REPORTING_FILE" = "" ]; then
         DBWRITER_REPORTING_FILE="$SGE_ROOT/$SGE_CELL/common/reporting"
      fi

      # dbwriter spool directory
      if [ "$SPOOL_DIR" = "" ]; then
         SPOOL_DIR="$SGE_ROOT/$SGE_CELL/spool/dbwriter"
      fi
      dummy=$SPOOL_DIR
      $INFOTEXT -n "\nEnter the path of the dbwriter spool directory [$dummy]>> "
      SPOOL_DIR=`Enter $dummy`

      # dbwriter derived values rules
      if [ "$DBWRITER_CALCULATION_FILE" = "" ]; then
         if [ $DB_DRIVER = "oracle.jdbc.driver.OracleDriver" ]; then
            DBWRITER_CALCULATION_FILE="$SGE_ROOT/dbwriter/database/oracle/dbwriter.xml"
         elif [ $DB_DRIVER = "org.postgresql.Driver" ]; then
            DBWRITER_CALCULATION_FILE="$SGE_ROOT/dbwriter/database/postgres/dbwriter.xml"
         elif [ $DB_DRIVER = "com.mysql.jdbc.Driver" ]; then
            DBWRITER_CALCULATION_FILE="$SGE_ROOT/dbwriter/database/mysql/dbwriter.xml"
         fi
      fi
      dummy=$DBWRITER_CALCULATION_FILE
      $INFOTEXT -n "\nEnter the file with the derived value rules [$dummy] >> "
      DBWRITER_CALCULATION_FILE=`Enter $dummy`

      # dbwriter debug level
      if [ "$DBWRITER_DEBUG" = "" ]; then
         DBWRITER_DEBUG="INFO"
      fi
      dummy=$DBWRITER_DEBUG
      $INFOTEXT "\nThe dbwriter can run with different debug levels"
      $INFOTEXT "Possible values: WARNING INFO CONFIG FINE FINER FINEST" 

      while :
      do
         $INFOTEXT -n "Enter the debug level of the dbwriter [$dummy] >> "
         DBWRITER_DEBUG=`Enter $dummy`
         case "$DBWRITER_DEBUG" in
          "WARNING")  break;;
          "INFO")     break;;
          "CONFIG")   break;;
          "FINE")     break;;
          "FINER")    break;;
          "FINEST")   break;;
          *)
             $INFOTEXT "Invalid debug level";;
          esac
      done
   fi

}

# ---------------------------------------------------------------
# queryParam
# This function collects all setup parameters
# ---------------------------------------------------------------
queryParams()
{
   ProcessSGERoot
   GetCell

   SetAdminUser
   queryJavaHome "1.4.1"

   queryJavaDataModel

   ask_user=1
   DBWRITER_CONF=$SGE_ROOT/$SGE_CELL/common/dbwriter.conf
   if [ -r $DBWRITER_CONF ]; then
      if [ $QUERY_PARAM_REPEATED -eq 0 ]; then
         $CLEAR
         $INFOTEXT -u "\nDbwriter configuration file"
         $INFOTEXT "\n$DBWRITER_CONF found.\n"
         $INFOTEXT -n -ask y n -def y \
         "Do you want to use the existing dbwriter configuration file? (y/n) [y] >> "
         if [ $? -eq 0 ]; then
            # source the dbwriter configuration
            . $DBWRITER_CONF
            DB_DRIVER=$DBWRITER_DRIVER
            DB_URL=$DBWRITER_URL
            DB_USER=$DBWRITER_USER
            DB_PW=$DBWRITER_USER_PW
            ask_user=0
         fi
      fi
   fi

   setupDB $DBWRITER_PWD $ask_user

   # all parameters should be in the dbwriter.conf file, if used
   queryDbwriterParams $ask_user

}


#############################################################################
#  Main
#############################################################################

$INFOTEXT -u "\nWelcome to the @@GRID_ENGINE_NAME@@ ARCo dbwriter module installation"

$INFOTEXT "The installation will take approximately 5 minutes\n"

$INFOTEXT -wait -n "Hit <RETURN> to continue >> "

euid=`$SGE_UTILBIN/uidgid -euid`

if [ "$euid" != "0" ]; then
  $INFOTEXT "dbwriter installation must be started as root"
  exit 1
fi

QUERY_PARAM_REPEATED=0
while :
do
   queryParams

   $CLEAR

   $INFOTEXT -u "\nAll parameters are now collected"

   $INFOTEXT "\n"
   $INFOTEXT "        SGE_ROOT=$SGE_ROOT"
   $INFOTEXT "        SGE_CELL=$SGE_CELL"
   $INFOTEXT "       JAVA_HOME=$JAVA_HOME ($JAVA_VERSION)"
   $INFOTEXT "          DB_URL=$DB_URL"
   $INFOTEXT "         DB_USER=$DB_USER"
   $INFOTEXT "       READ_USER=$READ_USER"
   if [ "$TABLESPACE" != "n/a" ]; then
      $INFOTEXT "      TABLESPACE=$TABLESPACE"
      $INFOTEXT "TABLESPACE_INDEX=$TABLESPACE_INDEX"
   fi
   if [ "$DB_SCHEMA" != "n/a" ]; then
      $INFOTEXT "       DB_SCHEMA=$DB_SCHEMA"
   fi
   $INFOTEXT "        INTERVAL=$DBWRITER_INTERVAL"
   $INFOTEXT "       SPOOL_DIR=$SPOOL_DIR"
   $INFOTEXT "    DERIVED_FILE=$DBWRITER_CALCULATION_FILE"
   $INFOTEXT "     DEBUG_LEVEL=$DBWRITER_DEBUG"

   $INFOTEXT -ask y n -def y -n "\nAre these settings correct? (y/n) [y] >> "
   if [ $? -eq 0 ]; then
       break;
   fi
   QUERY_PARAM_REPEATED=1
done

# database model installation
$CLEAR
$INFOTEXT -u "\nDatabase model installation/upgrade"
updateDBVersion $DBWRITER_PWD

UTILDIR=$SGE_ROOT/dbwriter/util
$INFOTEXT "\nCreate start script sgedbwriter in $SGE_ROOT/$SGE_CELL/common"

TMP_FILE=/tmp/sgedbwriter.$$
ExecuteAsAdmin touch $TMP_FILE
ExecuteAsAdmin chmod 755 $TMP_FILE

sed -e "s%@@SGE_ROOT@@%${SGE_ROOT}%g"                   \
    -e "s%@@SGE_CELL@@%${SGE_CELL}%g"                   \
    -e "s%@@JAVA_HOME@@%${JAVA_HOME}%g"                 \
    -e "s%@@JAVA_LIBRARY_PATH@@%${JAVA_LIBRARY_PATH}%g" \
    -e "s%@@JAVA_DATA_MODEL@@%${JAVA_DATA_MODEL}%g"     \
    $UTILDIR/sgedbwriter_template > $TMP_FILE

ExecuteAsAdmin mv $TMP_FILE $SGE_ROOT/$SGE_CELL/common/sgedbwriter

CONFDIR=$SGE_ROOT/$SGE_CELL/common
$INFOTEXT "\nCreate configuration file for dbwriter in $CONFDIR"

TMP_FILE=/tmp/dbwriter.conf.$$
ExecuteAsAdmin touch $TMP_FILE
ExecuteAsAdmin chmod 600 $TMP_FILE

sed -e "s%@@DB_USER_PW@@%${DB_PW}%g" \
    -e "s%@@DB_USER@@%${DB_USER}%g"       \
    -e "s%@@READ_USER@@%${READ_USER}%g"    \
    -e "s%@@READ_USER_PW@@%${READ_USER_PW}%g"    \
    -e "s%@@DB_URL@@%${DB_URL}%g"         \
    -e "s%@@DB_SCHEMA@@%${DB_SCHEMA}%g"   \
    -e "s%@@TABLESPACE@@%${TABLESPACE}%g" \
    -e "s%@@TABLESPACE_INDEX@@%${TABLESPACE_INDEX}%g" \
    -e "s%@@DB_DRIVER@@%${DB_DRIVER}%g"   \
    -e "s%@@DERIVED_FILE@@%${DBWRITER_CALCULATION_FILE}%g" \
    -e "s%@@DELETE_FILE@@%${DELETE_FILE}%g" \
    -e "s%@@REPORTING_FILE@@%${DBWRITER_REPORTING_FILE}%g" \
    -e "s%@@DEBUG_LEVEL@@%${DBWRITER_DEBUG}%g" \
    -e "s%@@INTERVAL@@%${DBWRITER_INTERVAL}%g" \
	 -e "s%@@SPOOL_DIR@@%${SPOOL_DIR}%g" \
   $UTILDIR/dbwriter.conf_template > $TMP_FILE 
	
ExecuteAsAdmin mv $TMP_FILE	$CONFDIR/dbwriter.conf

$INFOTEXT -wait -n "\nHit <RETURN> to continue >> "    

#
#  Setup parameter for the InstallRcScript function
#
STARTUP_FILE_NAME=sgedbwriter
S95NAME=S96sgedbwriter
K03NAME=K03sgedbwriter
DAEMON_NAME="dbwriter"
SGE_STARTUP_FILE=$SGE_ROOT/$SGE_CELL/common/sgedbwriter
ADD_TO_RC=false

$CLEAR 

InstallRcScript


$INFOTEXT "Installation of dbwriter completed"

