<!--

#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

-->
<DBModel>
   <!-- ======================================================================= -->
   <version id="0" name="6.0">
      <item>
         <description>Create table sge_job</description>
         <sql>
            CREATE TABLE sge_job (
            j_id integer,
            j_open integer default 1,
            j_job_number integer,
            j_task_number integer,
            j_pe_taskid text,
            j_job_name text,
            j_group text,
            j_owner text,
            j_account text,
            j_priority integer,
            j_submission_time timestamp,
            j_project text,
            j_department text,
            PRIMARY KEY (j_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX}
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create index sge_job_idx0</description>
         <sql>
            CREATE INDEX sge_job_idx0 ON sge_job (j_job_number, j_task_number, j_pe_taskid, j_open) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>Create index sge_job_idx1</description>
         <sql>
            CREATE INDEX sge_job_idx1 ON sge_job (j_submission_time) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>create table sge_job_usage</description>
         <sql>
            CREATE TABLE sge_job_usage (
            ju_id integer,
            ju_parent integer,
            ju_curr_time timestamp,
            ju_qname text,
            ju_hostname text,
            ju_start_time timestamp,
            ju_end_time timestamp,
            ju_failed integer,
            ju_exit_status integer,
            ju_granted_pe text,
            ju_slots integer,
            ju_state text,
            ju_ru_wallclock integer,
            ju_ru_utime double precision,
            ju_ru_stime double precision,
            ju_ru_maxrss integer,
            ju_ru_ixrss integer,
            ju_ru_issmrss integer,
            ju_ru_idrss integer,
            ju_ru_isrss integer,
            ju_ru_minflt integer,
            ju_ru_majflt integer,
            ju_ru_nswap integer,
            ju_ru_inblock integer,
            ju_ru_outblock integer,
            ju_ru_msgsnd integer,
            ju_ru_msgrcv integer,
            ju_ru_nsignals integer,
            ju_ru_nvcsw integer,
            ju_ru_nivcsw integer,
            ju_cpu double precision,
            ju_mem double precision,
            ju_io double precision,
            ju_iow double precision,
            ju_maxvmem double precision,
            PRIMARY KEY (ju_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX},
            FOREIGN KEY (ju_parent) REFERENCES sge_job (j_id)
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create table sge_job_log</description>
         <sql>
            CREATE TABLE sge_job_log (
            jl_id integer,
            jl_parent integer,
            jl_time timestamp,
            jl_event text,
            jl_state text,
            jl_user text,
            jl_host text,
            jl_state_time integer,
            jl_message text,
            PRIMARY KEY (jl_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX},
            FOREIGN KEY (jl_parent) REFERENCES sge_job (j_id)
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create table sge_job_request</description>
         <sql>
            CREATE TABLE sge_job_request (
            jr_id integer,
            jr_parent integer,
            jr_variable text,
            jr_value text,
            PRIMARY KEY (jr_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX},
            FOREIGN KEY (jr_parent) REFERENCES sge_job (j_id)
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create table sge_queue</description>
         <sql>
            CREATE TABLE sge_queue (
            q_id integer,
            q_qname text,
            q_hostname text,
            PRIMARY KEY (q_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX}
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create index sge_queue_idx0</description>
         <sql>
            CREATE INDEX sge_queue_idx0 ON sge_queue (q_qname, q_hostname)
         </sql>
      </item>
      <item>
         <description>Create table sge_queue_values</description>
         <sql>
            CREATE TABLE sge_queue_values (
            qv_id integer,
            qv_parent integer,
            qv_time_start timestamp,
            qv_time_end timestamp,
            qv_variable text,
            qv_svalue text,
            qv_dvalue double precision,
            qv_dconfig double precision,
            FOREIGN KEY (qv_parent) REFERENCES sge_queue (q_id)
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create index sge_queue_values_idx0</description>
         <sql>
            CREATE INDEX sge_queue_values_idx0 on sge_queue_values (qv_parent, qv_variable, qv_time_end) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>Create table sge_host</description>
         <sql>
            CREATE TABLE sge_host (
            h_id integer,
            h_hostname text,
            PRIMARY KEY (h_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX}
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create index sge_host_idx0</description>
         <sql>
            CREATE INDEX sge_host_idx0 ON sge_host (h_hostname) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>Create table sge_host_values</description>
         <sql>
            CREATE TABLE sge_host_values (
            hv_id integer,
            hv_parent integer,
            hv_time_start timestamp,
            hv_time_end timestamp,
            hv_variable text,
            hv_svalue text,
            hv_dvalue double precision,
            hv_dconfig double precision,
            PRIMARY KEY (hv_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX},
            FOREIGN KEY (hv_parent) REFERENCES sge_host (h_id)
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create index sge_host_values_idx0</description>
         <sql>
            CREATE INDEX sge_host_values_idx0 on sge_host_values (hv_parent, hv_variable, hv_time_end) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>Create table sge_department</description>
         <sql>
            CREATE TABLE sge_department (
            d_id integer,
            d_department text,
            PRIMARY KEY (d_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX}
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create index sge_department_idx0</description>
         <sql>
            CREATE INDEX sge_department_idx0 ON sge_department (d_department) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>Create table sge_department_values</description>
         <sql>
            CREATE TABLE sge_department_values (
            dv_id integer,
            dv_parent integer,
            dv_time_start timestamp,
            dv_time_end timestamp,
            dv_variable text,
            dv_svalue text,
            dv_dvalue double precision,
            dv_dconfig double precision,
            PRIMARY KEY (dv_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX},
            FOREIGN KEY (dv_parent) REFERENCES sge_department (d_id)
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create index sge_department_values_idx0</description>
         <sql>
            CREATE INDEX sge_department_values_idx0 on sge_department_values (dv_parent, dv_variable, dv_time_end) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>Create table sge_project</description>
         <sql>
            CREATE TABLE sge_project (
            p_id integer,
            p_project text,
            PRIMARY KEY (p_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX}
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create index sge_project_idx0</description>
         <sql>
            CREATE INDEX sge_project_idx0 ON sge_project (p_project) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>Create table sge_project_values</description>
         <sql>
            CREATE TABLE sge_project_values (
            pv_id integer,
            pv_parent integer,
            pv_time_start timestamp,
            pv_time_end timestamp,
            pv_variable text,
            pv_svalue text,
            pv_dvalue double precision,
            pv_dconfig double precision,
            PRIMARY KEY (pv_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX},
            FOREIGN KEY (pv_parent) REFERENCES sge_project (p_id)
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create index sge_project_values_idx0</description>
         <sql>
            CREATE INDEX sge_project_values_idx0 on sge_project_values (pv_parent, pv_variable, pv_time_end) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>Create table sge_user</description>
         <sql>
            CREATE TABLE sge_user (
            u_id integer,
            u_user text,
            PRIMARY KEY (u_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX}
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create table sge_user_values</description>
         <sql>
            CREATE TABLE sge_user_values (
            uv_id integer,
            uv_parent integer,
            uv_time_start timestamp,
            uv_time_end timestamp,
            uv_variable text,
            uv_svalue text,
            uv_dvalue double precision,
            uv_dconfig double precision,
            PRIMARY KEY (uv_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX},
            FOREIGN KEY (uv_parent) REFERENCES sge_user (u_id)
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create index sge_user_values_idx0</description>
         <sql>
            CREATE INDEX sge_user_values_idx0 on sge_user_values (uv_parent, uv_variable, uv_time_end) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>Create table sge_group</description>
         <sql>
            CREATE TABLE sge_group (
            g_id integer,
            g_group text,
            PRIMARY KEY (g_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX}
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create index sge_group_idx0</description>
         <sql>
            CREATE INDEX sge_group_idx0 ON sge_group (g_group) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>Creat table sge_group_values</description>
         <sql>
            CREATE TABLE sge_group_values (
            gv_id integer,
            gv_parent integer,
            gv_time_start timestamp,
            gv_time_end timestamp,
            gv_variable text,
            gv_svalue text,
            gv_dvalue double precision,
            gv_dconfig double precision,
            PRIMARY KEY (gv_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX},
            FOREIGN KEY (gv_parent) REFERENCES sge_group (g_id)
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create index sge_group_values_idx0</description>
         <sql>
            CREATE INDEX sge_group_values_idx0 on sge_group_values (gv_parent, gv_variable, gv_time_end) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>Create table sge_share_log</description>
         <sql>
            CREATE TABLE sge_share_log (
            sl_id integer,
            sl_curr_time timestamp,
            sl_usage_time timestamp,
            sl_node text,
            sl_user text,
            sl_project text,
            sl_shares integer,
            sl_job_count integer,
            sl_level double precision,
            sl_total double precision,
            sl_long_target_share double precision,
            sl_short_target_share double precision,
            sl_actual_share double precision,
            sl_usage double precision,
            sl_cpu double precision,
            sl_mem double precision,
            sl_io double precision,
            sl_ltcpu double precision,
            sl_ltmem double precision,
            sl_ltio double precision,
            PRIMARY KEY (sl_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX}
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create view view_accounting</description>
         <sql>
            CREATE VIEW view_accounting AS 
            SELECT j_job_number AS job_number, j_task_number AS task_number, 
            j_pe_taskid AS pe_taskid,
            j_job_name AS name, j_group AS group, j_owner AS username, 
            j_account AS account, 
            j_project AS project, j_department AS department,
            j_submission_time as submission_time,
            ju_start_time as start_time, ju_end_time as end_time,
            (ju_start_time - j_submission_time)::time AS wait_time,
            (ju_end_time - j_submission_time)::time AS turnaround_time,
            ju_ru_wallclock AS wallclock_time,
            ju_cpu AS cpu, ju_mem AS mem, ju_io AS io, ju_iow AS iow, 
            ju_maxvmem AS maxvmem
            FROM sge_job, sge_job_usage
            WHERE j_id = ju_parent
            AND j_submission_time > '1970-01-02' 
            AND ju_start_time >= j_submission_time
         </sql>
      </item>
      <item>
         <description>Create view view_job_times</description>
         <sql>
            CREATE VIEW view_job_times AS
            SELECT * FROM view_accounting
            WHERE pe_taskid = 'none'
         </sql>
      </item>
      <item>
         <!-- 
         number of jobs completed per hour
         TODO: we need the term cluster_value, could be implemented as host_values
               for host global to store these values as derived values
       -->
         <description>Create view view_jobs_completed</description>
         <sql>
            CREATE VIEW view_jobs_completed AS 
            SELECT date_trunc('hour', ju_end_time) AS time, count(ju_id) AS completed
            FROM sge_job_usage 
            WHERE ju_end_time > '1970-01-02'
            GROUP BY time
         </sql>
      </item>
      <item>
         <description>Create view view_job_log</description>
         <sql>
            CREATE VIEW view_job_log AS
            SELECT j_job_number AS job_number, j_task_number AS task_number,
            j_pe_taskid AS pe_taskid,
            j_job_name AS name, j_group AS group, j_owner AS username,
            j_account AS account,
            j_project AS project, j_department AS department,
            jl_time AS time, jl_event AS event, jl_state AS state,
            jl_user AS initiator, jl_host AS host, jl_message AS message
            FROM sge_job, sge_job_log
            WHERE j_id = jl_parent       
         </sql>
      </item>
      <item>
         <description>Create view view_department_values</description>
         <sql>
            CREATE VIEW view_department_values AS
            SELECT d_department AS department, 
            dv_time_start AS time_start, dv_time_end AS time_end,
            dv_variable AS variable, dv_svalue AS str_value,
            dv_dvalue AS num_value, dv_dconfig as num_config
            FROM sge_department, sge_department_values 
            WHERE d_id = dv_parent       
         </sql>
      </item>
      <item>
         <description>Create view view_group_values</description>
         <sql>
            CREATE VIEW view_group_values AS
            SELECT g_group AS groupname, 
            gv_time_start AS time_start, gv_time_end AS time_end,
            gv_variable AS variable, gv_svalue AS str_value,
            gv_dvalue AS num_value, gv_dconfig as num_config
            FROM sge_group, sge_group_values 
            WHERE g_id = gv_parent
         </sql>
      </item>
      <item>
         <description>Create view_host_values</description>
         <sql>
            CREATE VIEW view_host_values AS
            SELECT h_hostname AS hostname, 
            hv_time_start AS time_start, hv_time_end AS time_end,
            hv_variable AS variable, hv_svalue AS str_value,
            hv_dvalue AS num_value, hv_dconfig as num_config
            FROM sge_host, sge_host_values 
            WHERE h_id = hv_parent
         </sql>
      </item>
      <item>
         <description>Create view view_project_values</description>
         <sql>
            CREATE VIEW view_project_values AS
            SELECT p_project AS project, 
            pv_time_start AS time_start, pv_time_end AS time_end,
            pv_variable AS variable, pv_svalue AS str_value,
            pv_dvalue AS num_value, pv_dconfig as num_config 
            FROM sge_project, sge_project_values 
            WHERE p_id = pv_parent       
         </sql>
      </item>
      <item>
         <description>Create view view_queue_values</description>
         <sql>
            CREATE VIEW view_queue_values AS
            SELECT q_qname AS qname, q_hostname AS hostname,
            qv_time_start AS time_start, qv_time_end AS time_end,
            qv_variable AS variable, qv_svalue AS str_value,
            qv_dvalue AS num_value, qv_dconfig as num_config 
            FROM sge_queue, sge_queue_values 
            WHERE q_id = qv_parent       
         </sql>
      </item>
      <item>
         <description>Create view view_user_values</description>
         <sql>
            CREATE VIEW view_user_values AS
            SELECT u_user AS username, 
            uv_time_start AS time_start, uv_time_end AS time_end,
            uv_variable AS variable, uv_svalue AS str_value,
            uv_dvalue AS num_value, uv_dconfig as num_config 
            FROM sge_user, sge_user_values 
            WHERE u_id = uv_parent       
         </sql>
      </item>
      <!-- ============== privileges ========================================== -->
    
      <item>
         <description>revoke privileges from sge_department</description>
         <sql>revoke all PRIVILEGES on sge_department from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_department_values</description>
         <sql>revoke all PRIVILEGES on sge_department_values from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_group</description>
         <sql>revoke all PRIVILEGES on sge_group from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_group_values</description>
         <sql>revoke all PRIVILEGES on sge_group_values from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_host</description>
         <sql>revoke all PRIVILEGES on sge_host from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_host_values</description>
         <sql>revoke all PRIVILEGES on sge_host_values from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_job</description>
         <sql>revoke all PRIVILEGES on sge_job from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_job_log</description>
         <sql>revoke all PRIVILEGES on sge_job_log from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_job_request</description>
         <sql>revoke all PRIVILEGES on sge_job_request from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_job_usage</description>
         <sql>revoke all PRIVILEGES on sge_job_request from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_project</description>
         <sql>revoke all PRIVILEGES on sge_project from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_project_values</description>
         <sql>revoke all PRIVILEGES on sge_project_values from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_queue</description>
         <sql>revoke all PRIVILEGES on sge_queue from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_queue_values</description>
         <sql>revoke all PRIVILEGES on sge_queue_values from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_share_log</description>
         <sql>revoke all PRIVILEGES on sge_share_log from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_user</description>
         <sql>revoke all PRIVILEGES on sge_user from PUBLIC</sql>
      </item>
      <item>
         <description>revoke privileges from sge_user_values</description>
         <sql>revoke all PRIVILEGES on sge_user_values from PUBLIC</sql>
      </item>
      <item>
         <description>grant privileges to view_accounting</description>
         <sql>GRANT SELECT ON view_accounting TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges to view_department_values</description>
         <sql>GRANT SELECT ON view_department_values TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_department to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_department TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_department_values to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_department_values TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_group to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_group TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_group_values to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_group_values TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_host to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_host TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_host_values to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_host_values TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_job to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_job TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_job_log to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_job_log TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_job_request to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_job_request TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_job_usage to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_job_usage TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_project to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_project TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_project_values to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_project_values TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_queue to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_queue TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_queue_values to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_queue_values TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_share_log to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_share_log TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_user to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_user TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on sge_user_values to {READ_USER}</description>
         <sql>GRANT SELECT ON sge_user_values TO {READ_USER}</sql>
      </item>
      
      
      <item>
         <description>grant privileges on view_group_values to {READ_USER}</description>
         <sql>GRANT SELECT ON view_group_values TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on view_host_values to {READ_USER}</description>
         <sql>GRANT SELECT ON view_host_values TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on view_job_log to {READ_USER}</description>
         <sql>GRANT SELECT ON view_job_log TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on view_job_times to {READ_USER}</description>
         <sql>GRANT SELECT ON view_job_times TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on view_jobs_completed to {READ_USER}</description>
         <sql>GRANT SELECT ON view_jobs_completed TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on view_project_values to {READ_USER}</description>
         <sql>GRANT SELECT ON view_project_values TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on view_queue_values to {READ_USER}</description>
         <sql>GRANT SELECT ON view_queue_values TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges on view_user_values to {READ_USER}</description>
         <sql>GRANT SELECT ON view_user_values TO {READ_USER}</sql>
      </item>
      
   </version>
   <!-- ======================================================================= -->
   <version id="1" name="6.0u1">
      <!-- with the version 6.0u1 the versioning table was created -->
      <item>
         <description>Create table sge_version</description>
         <sql>
            CREATE TABLE sge_version (
            v_id       integer,
            v_version  text,
            v_time     timestamp,
            PRIMARY KEY(v_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX}
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Update view view_job_times</description>
         <sql>
            CREATE OR REPLACE VIEW view_job_times AS
            SELECT * FROM view_accounting
            WHERE pe_taskid = 'NONE'
         </sql>
      </item>
      <item>
         <description>Update version table</description>
         <sql>
            INSERT INTO sge_version (v_id, v_version,v_time)
            VALUES(1, '6.0u1', current_timestamp)
         </sql>
      </item>
   </version>
   
   <version id="2" name="6.0u8">
      <item>
         <description>Create index on column owner of table sge_job</description>
         <sql>
            CREATE INDEX sge_job_idx2 ON sge_job (j_owner)
         </sql>
      </item>
      <item>
         <description>Create index on columns ju_end_time and ju_hostname of table sge_job_usage</description>
         <sql>
            CREATE INDEX sge_job_usage_idx0 ON sge_job_usage (ju_end_time , ju_hostname) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>Update version table</description>
         <sql>
            INSERT INTO sge_version (v_id, v_version,v_time)
            VALUES(2, '6.0u8', current_timestamp)
         </sql>
      </item>
   </version>
   
   <!-- ======================================================================= -->
   <version id="3" name="6.0u10">
      <item>
         <description>Update version table</description>
         <sql>
            INSERT INTO sge_version (v_id, v_version, v_time)
            VALUES(3, '6.0u10', current_timestamp)
         </sql>
      </item>
   </version>
   
   
   <!-- ======================================================================= -->

   <version id="4" name="6.1">
      <item>
         <description>Create table sge_statistic</description>
         <sql>
            CREATE TABLE sge_statistic (
            s_id integer,
            s_name text,
            PRIMARY KEY(s_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX}
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create table sge_statistic_values</description>
         <sql>
            CREATE TABLE sge_statistic_values (
            sv_id integer,
            sv_parent integer,
            sv_time_start timestamp,
            sv_time_end timestamp,
            sv_variable text,
            sv_dvalue   double precision,             
            PRIMARY KEY(sv_id) USING INDEX  TABLESPACE {TABLESPACE_INDEX},
            FOREIGN KEY (sv_parent) REFERENCES sge_statistic (s_id)
            ) TABLESPACE {TABLESPACE}
         </sql>
      </item>
      <item>
         <description>Create index sge_statistic_values_idx0</description>
         <sql>
            CREATE INDEX sge_statistic_values_idx0 on sge_statistic_values (sv_parent, sv_variable, sv_time_end) TABLESPACE {TABLESPACE_INDEX}
         </sql>
      </item>
      <item>
         <description>Create view view_statistic</description>
         <sql>
            CREATE VIEW view_statistic AS
            SELECT s_name AS name, 
            sv_time_start AS time_start, 
            sv_time_end AS time_end,
            sv_variable AS variable,
            sv_dvalue AS num_value
            FROM sge_statistic, sge_statistic_values 
            WHERE s_id = sv_parent
         </sql>
      </item>
      <item>
         <description>grant privileges to sge_statistic</description>
         <sql>GRANT SELECT ON sge_statistic TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges to sge_statistic_values</description>
         <sql>GRANT SELECT ON sge_statistic_values TO {READ_USER}</sql>
      </item>
      <item>
         <description>grant privileges to view_statistic</description>
         <sql>GRANT SELECT ON view_statistic TO {READ_USER}</sql>
      </item>
      <item>
         <description>Update version table</description>
         <sql>
            INSERT INTO sge_version (v_id, v_version, v_time)
            VALUES(4, '6.1', current_timestamp)
         </sql>
      </item>
   </version>
   
   <!-- ======================================================================= -->
  
   <version id="5" name="6.1u1">     
      <item>
         <description>Create index on column ju_parent</description>
         <sql>
            CREATE INDEX sge_job_usage_idx1 ON sge_job_usage (ju_parent) TABLESPACE {TABLESPACE_INDEX}
         </sql>          
      </item>  
      <item>
         <description>Create index on column jr_parent</description>
         <sql>
            CREATE INDEX sge_job_request_idx0 ON sge_job_request (jr_parent) TABLESPACE {TABLESPACE_INDEX}
         </sql>          
      </item> 
      <item>
         <description>Create index on column jl_parent</description>
         <sql>
            CREATE INDEX sge_job_log_idx0 ON sge_job_log (jl_parent) TABLESPACE {TABLESPACE_INDEX}
         </sql>          
      </item>
      <item>
         <description>Create primary key on sge_queue_values</description>
         <sql>
            ALTER TABLE sge_queue_values add PRIMARY KEY(qv_id); 
         </sql>          
      </item>    
      <item>
         <description>Update version table</description>
         <sql>
            INSERT INTO sge_version (v_id, v_version, v_time)
            VALUES(5, '6.1u1', current_timestamp)
         </sql>
      </item>
   </version>
   
   <!-- ======================================================================= -->
            
   <version id="6" name="6.1u3">
      <!-- CR 6618599 - Long running jobs cause incorrect usage summary from ARCo database
           The old incorrect records need to be corrected -->
           
      <item>
         <description>
            Create view view_fixed_stimes - view containing the correct start_times 
            for the intermediate line.
        </description>
        <sql>
            CREATE VIEW view_fixed_stimes AS SELECT
               u1.ju_parent,
               u1.ju_id,
               coalesce(max(u2.ju_end_time), u1.ju_start_time) AS fstart_time,
               u1.ju_end_time
            FROM
               sge_job_usage u1
               LEFT OUTER JOIN sge_job_usage u2
                  ON u2.ju_parent = u1.ju_parent
                  AND u2.ju_end_time &lt; u1.ju_end_time
            GROUP BY
               u1.ju_parent,
               u1.ju_id,
               u1.ju_start_time,
               u1.ju_end_time
            ORDER BY
               u1.ju_parent,
               u1.ju_id
        </sql>
      </item>
      <item>
         <description>
            Update sge_job_usage with the correct ju_start_time values for
            intermediate lines
         </description>
         <sql>
            UPDATE sge_job_usage
            SET
               ju_start_time = n.fstart_time
            FROM
               view_fixed_stimes n
            WHERE
               sge_job_usage.ju_id = n.ju_id
         </sql>            
      </item>
      <item>
         <description>
            Create view view_fixed_usages - view containing the correct usages 
            (ju_cpu, ju_mem, ju_io, ju_iow) for the intermediate line.
         </description>
         <sql>
            CREATE VIEW view_fixed_usages AS SELECT
               u1.ju_parent,
               u1.ju_id,
               2*max(u2.ju_cpu) - sum(u2.ju_cpu) as ju_cpu,
               2*max(u2.ju_mem) - sum(u2.ju_mem) as ju_mem, 
               2*max(u2.ju_io) - sum(u2.ju_io) as ju_io, 
               2*max(u2.ju_iow) - sum(u2.ju_iow) as ju_iow
            FROM
               sge_job_usage u1
               LEFT OUTER JOIN sge_job_usage u2
                  ON u2.ju_parent = u1.ju_parent
            GROUP BY
               u1.ju_parent,
               u1.ju_id,
               u1.ju_cpu,
               u1.ju_mem,
               u1.ju_io,
               u1.ju_iow
            HAVING
               u1.ju_cpu = max(u2.ju_cpu)
            ORDER BY
               u1.ju_parent,
               u1.ju_id
         </sql>
      </item>
      <item>
         <description>
            Update sge_job_usage with the correct ju_cpu, ju_mem, ju_io, ju_iow 
            values for the intermediate line
         </description>
         <sql>
            UPDATE sge_job_usage 
            SET
                ju_cpu = n.ju_cpu,
                ju_mem = n.ju_mem,
                ju_io = n.ju_io,
                ju_iow = n.ju_iow
            FROM
                view_fixed_usages n
            WHERE 
                sge_job_usage.ju_id = n.ju_id
         </sql>
      </item>
      <item>
         <description>Drop view view_fixed_stimes</description>
         <sql>
            DROP VIEW view_fixed_stimes
         </sql>
      </item>      
      <item>
         <description>Drop view view_fixed_usages</description>
         <sql>
            DROP VIEW view_fixed_usages
         </sql>
      </item>     
      
      <!-- CR 6620930 - ARCO view_accounting filters out parallel job usage incorrectly -->
      <item>
         <description>Drop view view_job_times</description>
         <sql>
            DROP VIEW view_job_times
         </sql>
      </item>    
      <item>
         <description>Drop view view_accounting</description>
         <sql>
            DROP VIEW view_accounting
         </sql>
      </item>   
      <item>
         <description>Update view view_accounting</description>
         <sql>
            CREATE VIEW view_accounting AS 
            SELECT j_job_number AS job_number, j_task_number AS task_number, 
            j_pe_taskid AS pe_taskid,
            j_job_name AS name, j_group AS group, j_owner AS username, 
            j_account AS account, 
            j_project AS project, j_department AS department,
            j_submission_time as submission_time,
            ju_start_time as start_time, ju_end_time as end_time,
            (ju_start_time - j_submission_time)::time AS wait_time,
            (ju_end_time - j_submission_time)::time AS turnaround_time,
            ju_ru_wallclock AS wallclock_time,
            ju_cpu AS cpu, ju_mem AS mem, ju_io AS io, ju_iow AS iow, 
            ju_maxvmem AS maxvmem
            FROM sge_job, sge_job_usage
            WHERE j_id = ju_parent
            AND ju_start_time >= j_submission_time
         </sql>
      </item>
      <item>
         <description>Update view view_job_times</description>
         <sql>
            CREATE OR REPLACE VIEW view_job_times AS
            SELECT * FROM view_accounting
            WHERE pe_taskid = 'NONE'
         </sql>
      </item>  
      <item>
         <description>Update version table</description>
         <sql>
            INSERT INTO sge_version (v_id, v_version, v_time)
            VALUES(6, '6.1u3', current_timestamp)
         </sql>
      </item>
   </version>
   
</DBModel>
