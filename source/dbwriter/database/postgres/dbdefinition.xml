<!--

#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

-->
<DBModel>
  <!-- ======================================================================= -->
  <version id="0" name="6.0">
    <item>
       <description>Create table sge_job</description>
       <sql>
         CREATE TABLE sge_job (
             j_id integer,
             j_open integer default 1,
             j_job_number integer,
             j_task_number integer,
             j_pe_taskid text,
             j_job_name text,
             j_group text,
             j_owner text,
             j_account text,
             j_priority integer,
             j_submission_time timestamp,
             j_project text,
             j_department text,
             PRIMARY KEY (j_id)
         )
       </sql>
    </item>
    <item>
       <description>Create index sge_job_idx0</description>
       <sql>
         CREATE INDEX sge_job_idx0 ON sge_job (j_job_number, j_task_number, j_pe_taskid, j_open)
       </sql>
    </item>
    <item>
       <description>Create index sge_job_idx1</description>
       <sql>
         CREATE INDEX sge_job_idx1 ON sge_job (j_submission_time)
       </sql>
    </item>
    <item>
       <description>create table sge_job_usage</description>
       <sql>
         CREATE TABLE sge_job_usage (
             ju_id integer,
             ju_parent integer,
             ju_curr_time timestamp,
             ju_qname text,
             ju_hostname text,
             ju_start_time timestamp,
             ju_end_time timestamp,
             ju_failed integer,
             ju_exit_status integer,
             ju_granted_pe text,
             ju_slots integer,
             ju_state text,
             ju_ru_wallclock integer,
             ju_ru_utime double precision,
             ju_ru_stime double precision,
             ju_ru_maxrss integer,
             ju_ru_ixrss integer,
             ju_ru_issmrss integer,
             ju_ru_idrss integer,
             ju_ru_isrss integer,
             ju_ru_minflt integer,
             ju_ru_majflt integer,
             ju_ru_nswap integer,
             ju_ru_inblock integer,
             ju_ru_outblock integer,
             ju_ru_msgsnd integer,
             ju_ru_msgrcv integer,
             ju_ru_nsignals integer,
             ju_ru_nvcsw integer,
             ju_ru_nivcsw integer,
             ju_cpu double precision,
             ju_mem double precision,
             ju_io double precision,
             ju_iow double precision,
             ju_maxvmem double precision,
             PRIMARY KEY (ju_id),
             FOREIGN KEY (ju_parent) REFERENCES sge_job (j_id)
         )
       </sql>
    </item>
    <item>
       <description>Create table sge_job_log</description>
       <sql>
         CREATE TABLE sge_job_log (
             jl_id integer,
             jl_parent integer,
             jl_time timestamp,
             jl_event text,
             jl_state text,
             jl_user text,
             jl_host text,
             jl_state_time integer,
             jl_message text,
             PRIMARY KEY (jl_id),
             FOREIGN KEY (jl_parent) REFERENCES sge_job (j_id)
         )
       </sql>
    </item>
    <item>
       <description>Create table sge_job_request</description>
       <sql>
         CREATE TABLE sge_job_request (
             jr_id integer,
             jr_parent integer,
             jr_variable text,
             jr_value text,
             PRIMARY KEY (jr_id),
             FOREIGN KEY (jr_parent) REFERENCES sge_job (j_id)
         )       
       </sql>
    </item>
    <item>
       <description>Create table sge_queue</description>
       <sql>
         CREATE TABLE sge_queue (
             q_id integer,
             q_qname text,
             q_hostname text,
             PRIMARY KEY (q_id)
         )
       </sql>
    </item>
    <item>
       <description>Create index sge_queue_idx0</description>
       <sql>
         CREATE INDEX sge_queue_idx0 ON sge_queue (q_qname, q_hostname)
       </sql>
    </item>
    <item>
       <description>Create table sge_queue_values</description>
       <sql>
         CREATE TABLE sge_queue_values (
             qv_id integer,
             qv_parent integer,
             qv_time_start timestamp,
             qv_time_end timestamp,
             qv_variable text,
             qv_svalue text,
             qv_dvalue double precision,
             qv_dconfig double precision,
             FOREIGN KEY (qv_parent) REFERENCES sge_queue (q_id)
         )       
       </sql>
    </item>
    <item>
       <description>Create index sge_queue_values_idx0</description>
       <sql>
         CREATE INDEX sge_queue_values_idx0 on sge_queue_values (qv_parent, qv_variable, qv_time_end)
       </sql>
    </item>
    <item>
       <description>Create table sge_host</description>
       <sql>
         CREATE TABLE sge_host (
             h_id integer,
             h_hostname text,
             PRIMARY KEY (h_id)
         )
       </sql>
    </item>
    <item>
       <description>Create index sge_host_idx0</description>
       <sql>
        CREATE INDEX sge_host_idx0 ON sge_host (h_hostname)
       </sql>
    </item>
    <item>
       <description>Create table sge_host_values</description>
       <sql>
         CREATE TABLE sge_host_values (
             hv_id integer,
             hv_parent integer,
             hv_time_start timestamp,
             hv_time_end timestamp,
             hv_variable text,
             hv_svalue text,
             hv_dvalue double precision,
             hv_dconfig double precision,
             PRIMARY KEY (hv_id),
             FOREIGN KEY (hv_parent) REFERENCES sge_host (h_id)
         )
       </sql>
    </item>
    <item>
       <description>Create index sge_host_values_idx0</description>
       <sql>
         CREATE INDEX sge_host_values_idx0 on sge_host_values (hv_parent, hv_variable, hv_time_end)
       </sql>
    </item>
    <item>
       <description>Create table sge_department</description>
       <sql>
         CREATE TABLE sge_department (
           d_id integer,
           d_department text,
           PRIMARY KEY (d_id)
         )
       </sql>
    </item>
    <item>
       <description>Create index sge_department_idx0</description>
       <sql>
         CREATE INDEX sge_department_idx0 ON sge_department (d_department)
       </sql>
    </item>
    <item>
       <description>Create table sge_department_values</description>
       <sql>
         CREATE TABLE sge_department_values (
             dv_id integer,
             dv_parent integer,
             dv_time_start timestamp,
             dv_time_end timestamp,
             dv_variable text,
             dv_svalue text,
             dv_dvalue double precision,
             dv_dconfig double precision,
             PRIMARY KEY (dv_id),
             FOREIGN KEY (dv_parent) REFERENCES sge_department (d_id)
         )       
       </sql>
    </item>
    <item>
       <description>Create index sge_department_values_idx0</description>
       <sql>
         CREATE INDEX sge_department_values_idx0 on sge_department_values (dv_parent, dv_variable, dv_time_end)
       </sql>
    </item>
    <item>
       <description>Create table sge_project</description>
       <sql>
         CREATE TABLE sge_project (
             p_id integer,
             p_project text,
             PRIMARY KEY (p_id)
         );
       </sql>
    </item>
    <item>
       <description>Create index sge_project_idx0</description>
       <sql>
         CREATE INDEX sge_project_idx0 ON sge_project (p_project)
       </sql>
    </item>
    <item>
       <description>Create table sge_project_values</description>
       <sql>
         CREATE TABLE sge_project_values (
             pv_id integer,
             pv_parent integer,
             pv_time_start timestamp,
             pv_time_end timestamp,
             pv_variable text,
             pv_svalue text,
             pv_dvalue double precision,
             pv_dconfig double precision,
             PRIMARY KEY (pv_id),
             FOREIGN KEY (pv_parent) REFERENCES sge_project (p_id)
         )       
       </sql>
    </item>
    <item>
       <description>Create index sge_project_values_idx0</description>
       <sql>
        CREATE INDEX sge_project_values_idx0 on sge_project_values (pv_parent, pv_variable, pv_time_end)
       </sql>
    </item>
    <item>
       <description>Create table sge_user</description>
       <sql>
         CREATE TABLE sge_user (
             u_id integer,
             u_user text,
             PRIMARY KEY (u_id)
         )       
       </sql>
    </item>
    <item>
       <description>Create table sge_user_values</description>
       <sql>
         CREATE TABLE sge_user_values (
             uv_id integer,
             uv_parent integer,
             uv_time_start timestamp,
             uv_time_end timestamp,
             uv_variable text,
             uv_svalue text,
             uv_dvalue double precision,
             uv_dconfig double precision,
             PRIMARY KEY (uv_id),
             FOREIGN KEY (uv_parent) REFERENCES sge_user (u_id)
         )       
       </sql>
    </item>
    <item>
       <description>Create index sge_user_values_idx0</description>
       <sql>
         CREATE INDEX sge_user_values_idx0 on sge_user_values (uv_parent, uv_variable, uv_time_end)
       </sql>
    </item>
    <item>
       <description>Create table sge_group</description>
       <sql>
         CREATE TABLE sge_group (
             g_id integer,
             g_group text,
             PRIMARY KEY (g_id)
         )       
       </sql>
    </item>
    <item>
       <description>Create index sge_group_idx0</description>
       <sql>
          CREATE INDEX sge_group_idx0 ON sge_group (g_group)
       </sql>
    </item>
    <item>
       <description>Creat table sge_group_values</description>
       <sql>
         CREATE TABLE sge_group_values (
             gv_id integer,
             gv_parent integer,
             gv_time_start timestamp,
             gv_time_end timestamp,
             gv_variable text,
             gv_svalue text,
             gv_dvalue double precision,
             gv_dconfig double precision,
             PRIMARY KEY (gv_id),
             FOREIGN KEY (gv_parent) REFERENCES sge_group (g_id)
         )       
       </sql>
    </item>
    <item>
       <description>Create index sge_group_values_idx0</description>
       <sql>
        CREATE INDEX sge_group_values_idx0 on sge_group_values (gv_parent, gv_variable, gv_time_end)
       </sql>
    </item>
    <item>
       <description>Create table sge_share_log</description>
       <sql>
         CREATE TABLE sge_share_log (
             sl_id integer,
             sl_curr_time timestamp,
             sl_usage_time timestamp,
             sl_node text,
             sl_user text,
             sl_project text,
             sl_shares integer,
             sl_job_count integer,
             sl_level double precision,
             sl_total double precision,
             sl_long_target_share double precision,
             sl_short_target_share double precision,
             sl_actual_share double precision,
             sl_usage double precision,
             sl_cpu double precision,
             sl_mem double precision,
             sl_io double precision,
             sl_ltcpu double precision,
             sl_ltmem double precision,
             sl_ltio double precision,
             PRIMARY KEY (sl_id)
         )
       </sql>
    </item>
    <item>
       <description>Create view view_accounting</description>
       <sql>
         CREATE VIEW view_accounting AS 
            SELECT j_job_number AS job_number, j_task_number AS task_number, 
                   j_pe_taskid AS pe_taskid,
                   j_job_name AS name, j_group AS group, j_owner AS username, 
                   j_account AS account, 
                   j_project AS project, j_department AS department,
                   j_submission_time AS submission_time, 
                   ju_start_time as start_time, ju_end_time as end_time,
                   (ju_start_time - j_submission_time)::time AS wait_time,
                   (ju_end_time - j_submission_time)::time AS turnaround_time,
                   ju_ru_wallclock AS wallclock_time,
                   ju_cpu AS cpu, ju_mem AS mem, ju_io AS io, ju_iow AS iow, 
                   ju_maxvmem AS maxvmem
            FROM sge_job, sge_job_usage
            WHERE j_id = ju_parent
              AND j_submission_time > '1970-01-02' 
              AND ju_start_time >= j_submission_time
       </sql>
    </item>
    <item>
       <description>Create view view_job_times</description>
       <sql>
         CREATE VIEW view_job_times AS
            SELECT * FROM view_accounting
            WHERE pe_taskid = 'none'
       </sql>
    </item>
    <item>
       <!-- 
         number of jobs completed per hour
         TODO: we need the term cluster_value, could be implemented as host_values
               for host global to store these values as derived values
       -->
       <description>Create view view_jobs_completed</description>
       <sql>
         CREATE VIEW view_jobs_completed AS 
            SELECT date_trunc('hour', ju_end_time) AS time, count(ju_id) AS completed
            FROM sge_job_usage 
            WHERE ju_end_time > '1970-01-02'
            GROUP BY time
       </sql>
    </item>
    <item>
       <description>Create view view_job_log</description>
       <sql>
         CREATE VIEW view_job_log AS
            SELECT j_job_number AS job_number, j_task_number AS task_number,
                   j_pe_taskid AS pe_taskid,
                   j_job_name AS name, j_group AS group, j_owner AS username,
                   j_account AS account,
                   j_project AS project, j_department AS department,
                   jl_time AS time, jl_event AS event, jl_state AS state,
                   jl_user AS initiator, jl_host AS host, jl_message AS message
            FROM sge_job, sge_job_log
            WHERE j_id = jl_parent       
       </sql>
    </item>
    <item>
       <description>Create view view_department_values</description>
       <sql>
         CREATE VIEW view_department_values AS
            SELECT d_department AS department, 
                   dv_time_start AS time_start, dv_time_end AS time_end,
                   dv_variable AS variable, dv_svalue AS str_value,
                   dv_dvalue AS num_value, dv_dconfig as num_config
            FROM sge_department, sge_department_values 
            WHERE d_id = dv_parent       
       </sql>
    </item>
    <item>
       <description>Create view view_group_values</description>
       <sql>
         CREATE VIEW view_group_values AS
            SELECT g_group AS groupname, 
                   gv_time_start AS time_start, gv_time_end AS time_end,
                   gv_variable AS variable, gv_svalue AS str_value,
                   gv_dvalue AS num_value, gv_dconfig as num_config
            FROM sge_group, sge_group_values 
            WHERE g_id = gv_parent
       </sql>
    </item>
    <item>
       <description>Create view_host_values</description>
       <sql>
         CREATE VIEW view_host_values AS
            SELECT h_hostname AS hostname, 
                   hv_time_start AS time_start, hv_time_end AS time_end,
                   hv_variable AS variable, hv_svalue AS str_value,
                   hv_dvalue AS num_value, hv_dconfig as num_config
            FROM sge_host, sge_host_values 
            WHERE h_id = hv_parent
       </sql>
    </item>
    <item>
       <description>Create view view_project_values</description>
       <sql>
         CREATE VIEW view_project_values AS
            SELECT p_project AS project, 
                   pv_time_start AS time_start, pv_time_end AS time_end,
                   pv_variable AS variable, pv_svalue AS str_value,
                   pv_dvalue AS num_value, pv_dconfig as num_config 
            FROM sge_project, sge_project_values 
            WHERE p_id = pv_parent       
       </sql>
    </item>
    <item>
       <description>Create view view_queue_values</description>
       <sql>
         CREATE VIEW view_queue_values AS
            SELECT q_qname AS qname, q_hostname AS hostname,
                   qv_time_start AS time_start, qv_time_end AS time_end,
                   qv_variable AS variable, qv_svalue AS str_value,
                   qv_dvalue AS num_value, qv_dconfig as num_config 
            FROM sge_queue, sge_queue_values 
            WHERE q_id = qv_parent       
       </sql>
    </item>
    <item>
       <description>Create view view_user_values</description>
       <sql>
         CREATE VIEW view_user_values AS
            SELECT u_user AS username, 
                   uv_time_start AS time_start, uv_time_end AS time_end,
                   uv_variable AS variable, uv_svalue AS str_value,
                   uv_dvalue AS num_value, uv_dconfig as num_config 
            FROM sge_user, sge_user_values 
            WHERE u_id = uv_parent       
       </sql>
    </item>
    <!-- ============== privileges ========================================== -->
    
    <item>
       <description>revoke privileges from sge_department</description>
       <sql>revoke all PRIVILEGES on sge_department from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_department_values</description>
       <sql>revoke all PRIVILEGES on sge_department_values from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_group</description>
       <sql>revoke all PRIVILEGES on sge_group from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_group_values</description>
       <sql>revoke all PRIVILEGES on sge_group_values from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_host</description>
       <sql>revoke all PRIVILEGES on sge_host from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_host_values</description>
       <sql>revoke all PRIVILEGES on sge_host_values from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_job</description>
       <sql>revoke all PRIVILEGES on sge_job from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_job_log</description>
       <sql>revoke all PRIVILEGES on sge_job_log from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_job_request</description>
       <sql>revoke all PRIVILEGES on sge_job_request from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_job_usage</description>
       <sql>revoke all PRIVILEGES on sge_job_request from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_project</description>
       <sql>revoke all PRIVILEGES on sge_project from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_project_values</description>
       <sql>revoke all PRIVILEGES on sge_project_values from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_queue</description>
       <sql>revoke all PRIVILEGES on sge_queue from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_queue_values</description>
       <sql>revoke all PRIVILEGES on sge_queue_values from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_share_log</description>
       <sql>revoke all PRIVILEGES on sge_share_log from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_user</description>
       <sql>revoke all PRIVILEGES on sge_user from PUBLIC</sql>
    </item>
    <item>
       <description>revoke privileges from sge_user_values</description>
       <sql>revoke all PRIVILEGES on sge_user_values from PUBLIC</sql>
    </item>
    <item>
       <description>grant privileges to view_accounting</description>
       <sql>GRANT SELECT ON view_accounting TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges to view_department_values</description>
       <sql>GRANT SELECT ON view_department_values TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_department to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_department TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_department_values to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_department_values TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_group to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_group TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_group_values to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_group_values TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_host to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_host TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_host_values to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_host_values TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_job to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_job TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_job_log to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_job_log TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_job_request to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_job_request TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_job_usage to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_job_usage TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_project to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_project TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_project_values to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_project_values TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_queue to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_queue TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_queue_values to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_queue_values TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_share_log to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_share_log TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_user to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_user TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on sge_user_values to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_user_values TO {READ_USER}</sql>
    </item>
    
    
    <item>
       <description>grant privileges on view_group_values to {READ_USER}</description>
       <sql>GRANT SELECT ON view_group_values TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on view_host_values to {READ_USER}</description>
       <sql>GRANT SELECT ON view_host_values TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on view_job_log to {READ_USER}</description>
       <sql>GRANT SELECT ON view_job_log TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on view_job_times to {READ_USER}</description>
       <sql>GRANT SELECT ON view_job_times TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on view_jobs_completed to {READ_USER}</description>
       <sql>GRANT SELECT ON view_jobs_completed TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on view_project_values to {READ_USER}</description>
       <sql>GRANT SELECT ON view_project_values TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on view_queue_values to {READ_USER}</description>
       <sql>GRANT SELECT ON view_queue_values TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on view_user_values to {READ_USER}</description>
       <sql>GRANT SELECT ON view_user_values TO {READ_USER}</sql>
    </item>
    
  </version>
  <!-- ======================================================================= -->
  <version id="1" name="6.0u1">
     <!-- with the version 6.0u1 the versioning table was created -->
     <item>
        <description>Create table sge_version</description>
        <sql>
         CREATE TABLE sge_version (
             v_id       integer,
             v_version  text,
             v_time     timestamp,
             PRIMARY KEY(v_id)
         );
        </sql>
     </item>
     <item>
        <description>Update view view_job_times</description>
        <sql>
          CREATE OR REPLACE VIEW view_job_times AS
                       SELECT * FROM view_accounting
                       WHERE pe_taskid = 'NONE'
        </sql>
     </item>
     <item>
        <description>Update version table</description>
        <sql>
          INSERT INTO sge_version (v_id, v_version,v_time)
                      VALUES(1, '6.0u1', current_timestamp)
        </sql>
     </item>
  </version>
  
  <version id="2" name="6.0u8">
    <item>
       <description>Create index on column owner of table sge_job</description>
       <sql>
         CREATE INDEX sge_job_idx2 ON sge_job (j_owner)
       </sql>
    </item>
    <item>
       <description>Create index on columns ju_end_time and ju_hostname of table sge_job_usage</description>
       <sql>
         CREATE INDEX sge_job_usage_idx0 ON sge_job_usage (ju_end_time , ju_hostname)
       </sql>
    </item>
     <item>
        <description>Update version table</description>
        <sql>
          INSERT INTO sge_version (v_id, v_version,v_time)
                      VALUES(2, '6.0u8', current_timestamp)
        </sql>
     </item>
  </version>

  <!-- ======================================================================= -->
  <version id="3" name="6.0u10">
     <item>
        <description>Update version table</description>
        <sql>
          INSERT INTO sge_version (v_id, v_version, v_time)
                      VALUES(3, '6.0u10', current_timestamp)
        </sql>
     </item>
  </version>
  
  
  <!-- ======================================================================= -->

  <version id="4" name="6.1">
     <item>
        <description>Create table sge_statistic</description>
        <sql>
         CREATE TABLE sge_statistic (
             s_id integer,
             s_name text,
             PRIMARY KEY(s_id)
         );
        </sql>
     </item>
     <item>
        <description>Create table sge_statistic_values</description>
        <sql>
         CREATE TABLE sge_statistic_values (
             sv_id integer,
             sv_parent integer,
             sv_time_start timestamp,
             sv_time_end timestamp,
             sv_variable text,
             sv_dvalue   double precision,             
             PRIMARY KEY(sv_id),
             FOREIGN KEY (sv_parent) REFERENCES sge_statistic (s_id)
         );
        </sql>
     </item>
     <item>
        <description>Create index sge_statistic_values_idx0</description>
        <sql>
         CREATE INDEX sge_statistic_values_idx0 on sge_statistic_values (sv_parent, sv_variable, sv_time_end)
        </sql>
     </item>
     <item>
       <description>Create view view_statistic</description>
       <sql>
         CREATE VIEW view_statistic AS
            SELECT s_name AS name, 
                   sv_time_start AS time_start, 
                   sv_time_end AS time_end,
                   sv_variable AS variable,
                   sv_dvalue AS num_value
            FROM sge_statistic, sge_statistic_values 
            WHERE s_id = sv_parent
       </sql>
     </item>
     <item>
       <description>grant privileges to sge_statistic</description>
       <sql>GRANT SELECT ON sge_statistic TO {READ_USER}</sql>
     </item>
     <item>
       <description>grant privileges to sge_statistic_values</description>
       <sql>GRANT SELECT ON sge_statistic_values TO {READ_USER}</sql>
     </item>
     <item>
       <description>grant privileges to view_statistic</description>
       <sql>GRANT SELECT ON view_statistic TO {READ_USER}</sql>
     </item>
     <item>
        <description>Update version table</description>
        <sql>
          INSERT INTO sge_version (v_id, v_version, v_time)
                      VALUES(4, '6.1', current_timestamp)
        </sql>
     </item>
  </version>
  
   
  <!-- ======================================================================= -->
  
   <version id="5" name="6.1u1">     
    <item>
         <description>Create index on column ju_parent</description>
         <sql>
            CREATE INDEX sge_job_usage_idx1 ON sge_job_usage (ju_parent)
         </sql>          
      </item>  
      <item>
         <description>Create index on column jr_parent</description>
         <sql>
            CREATE INDEX sge_job_request_idx0 ON sge_job_request (jr_parent)
         </sql>          
      </item> 
      <item>
         <description>Create index on column jl_parent</description>
         <sql>
            CREATE INDEX sge_job_log_idx0 ON sge_job_log (jl_parent)
         </sql>          
      </item>
      <item>
         <description>Create primary key on sge_queue_values</description>
         <sql>
            ALTER TABLE sge_queue_values add PRIMARY KEY(qv_id); 
         </sql>          
      </item>    
      <item>
         <description>Update version table</description>
         <sql>
            INSERT INTO sge_version (v_id, v_version, v_time)
            VALUES(5, '6.1u1', current_timestamp)
         </sql>
      </item>
   </version>
   
   <!-- ======================================================================= -->
  
   <version id="6" name="6.2">     
      <item>
       <description>Create table sge_ar</description>
       <sql>
         CREATE TABLE sge_ar (
            ar_id integer,
            ar_number integer,
            ar_owner text,
            ar_submission_time timestamp,
            PRIMARY KEY (ar_id)
         )
       </sql>
    </item>
    <item>
         <description>Create index sge_ar_idx0 on column ar_number</description>
       <sql>CREATE INDEX sge_ar_idx0 ON sge_ar (ar_number)</sql>       
    </item>
    <item>
         <description>Create index sge_ar_idx1 on column ar_owner</description>
       <sql>CREATE INDEX sge_ar_idx1 ON sge_ar (ar_owner)</sql>       
    </item>    
    <item>
       <description>Create table sge_ar_attribute</description>
       <sql>
         CREATE TABLE sge_ar_attribute (
            ara_id integer,
            ara_parent integer,
            ara_curr_time timestamp,
            ara_name text,
            ara_account text,
            ara_start_time timestamp,
            ara_end_time timestamp,
            ara_granted_pe text,
            PRIMARY KEY (ara_id),
            FOREIGN KEY (ara_parent) REFERENCES sge_ar (ar_id) ON DELETE CASCADE
         )
       </sql>
    </item>
    <item>
         <description>Create index sge_ar_attribute_idx0 on column ara_end_time</description>
       <sql>CREATE INDEX sge_ar_attribute_idx0 ON sge_ar_attribute (ara_end_time)</sql>       
    </item>
    <item>
         <description>Create index sge_ar_attribute_idx1 on column ara_parent</description>
         <sql>CREATE INDEX sge_ar_attribute_idx1 ON sge_ar_attribute (ara_parent)</sql>          
      </item>
      <item>
      <description>Create table sge_ar_usage</description>
      <sql>
         CREATE TABLE sge_ar_usage (
            aru_id integer,
            aru_parent integer,
            aru_termination_time timestamp,
            aru_qname text,
            aru_hostname text,
            aru_slots integer,
            PRIMARY KEY (aru_id),
            FOREIGN KEY (aru_parent) REFERENCES sge_ar (ar_id)
         )
      </sql>
    </item>
    <item>
         <description>Create index sge_ar_usage_idx0 on column aru_parent</description>
         <sql>CREATE INDEX sge_ar_usage_idx0 ON sge_ar_usage (aru_parent)</sql>          
      </item>
      <item>
      <description>Create table sge_ar_log</description>
      <sql>
         CREATE TABLE sge_ar_log (
            arl_id integer,
            arl_parent integer,
            arl_time timestamp,
            arl_event text,
            arl_state text,
            arl_message text,
            PRIMARY KEY (arl_id),
            FOREIGN KEY (arl_parent) REFERENCES sge_ar (ar_id)
         )
      </sql>
    </item>   
    <item>
         <description>Create index sge_ar_log_idx0 on column arl_event</description>
       <sql>CREATE INDEX sge_ar_log_idx0 ON sge_ar_log (arl_event)</sql>       
    </item>   
    <item>
         <description>Create index sge_ar_log_idx1 on column arl_parent</description>
         <sql>CREATE INDEX sge_ar_log_idx1 ON sge_ar_log (arl_parent)</sql>          
      </item>
      <item>
       <description>Create table sge_ar_resource_usage</description>
       <sql>
         CREATE TABLE sge_ar_resource_usage (
             arru_id integer,
             arru_parent integer,
             arru_variable text,
             arru_value text,
             PRIMARY KEY (arru_id),
             FOREIGN KEY (arru_parent) REFERENCES sge_ar (ar_id)
         )       
       </sql>
    </item>    
    <item>
         <description>Create index sge_ar_resource_usage_idx0 on column arru_parent</description>
         <sql>CREATE INDEX sge_ar_resource_usage_idx0 ON sge_ar_resource_usage (arru_parent)</sql>          
      </item>
      <item>
         <description>Add the column ju_ar_number to sge_job_usage table</description>
       <sql>
          ALTER TABLE sge_job_usage ADD COLUMN ju_ar_number integer DEFAULT 0
       </sql>
    </item>    
    <item>
         <description>Create index sge_job_usage_idx2 on column ju_ar_number</description>
       <sql>
            CREATE INDEX sge_job_usage_idx2 ON sge_job_usage (ju_ar_number)
       </sql>          
    </item>    
    <item>
       <description>Drop view view_job_times</description>
       <sql>
         DROP VIEW view_job_times
       </sql>
    </item>    
    <item>
       <description>Drop view view_accounting</description>
       <sql>
         DROP VIEW view_accounting
       </sql>
    </item>    
    <item>
         <description>Update view view_accounting</description>
       <sql>
         CREATE VIEW view_accounting AS 
            SELECT j_job_number AS job_number, j_task_number AS task_number, 
                   j_pe_taskid AS pe_taskid,
                   j_job_name AS name, j_group AS group, j_owner AS username,
                   j_account AS account, 
                   j_project AS project, j_department AS department,
                   j_submission_time AS submission_time, 
                   ju_ar_number AS ar_number,
                   ju_start_time AS start_time, ju_end_time as end_time,
                   (ju_start_time - j_submission_time)::interval AS wait_time,
                   (ju_end_time - j_submission_time)::interval AS turnaround_time,
                   (ju_end_time - ju_start_time)::interval AS job_duration,
                   ju_ru_wallclock AS wallclock_time,
                   ju_cpu AS cpu, ju_mem AS mem, ju_io AS io, ju_iow AS iow, 
                   ju_maxvmem AS maxvmem
            FROM sge_job, sge_job_usage
            WHERE j_id = ju_parent
              AND j_submission_time > '1970-01-02' 
              AND ju_start_time >= j_submission_time
       </sql>
    </item>    
    <item>
        <description>Update view view_job_times</description>
        <sql>
          CREATE OR REPLACE VIEW view_job_times AS
                       SELECT * FROM view_accounting
                       WHERE pe_taskid = 'NONE'
        </sql>
     </item>    
     <item>
       <description>Create view view_ar_attribute</description>
       <sql>
         CREATE OR REPLACE VIEW view_ar_attribute AS
            SELECT ar_number AS ar_number,
                   ar_owner AS owner,
                   ar_submission_time AS submission_time,
                   ara_name AS name,
                   ara_account AS account,
                   ara_start_time AS start_time,
                   ara_end_time AS end_time,
                   ara_granted_pe AS granted_pe
            FROM sge_ar, sge_ar_attribute
            WHERE ar_id = ara_parent       
       </sql>
    </item>    
    <item>
       <description>Create view view_ar_log</description>
       <sql>
          CREATE VIEW view_ar_log AS
            SELECT ar_number AS ar_number,
                   arl_time AS time,
                   arl_event AS event,
                   arl_state AS state,
                   arl_message AS message
            FROM sge_ar, sge_ar_log
            WHERE ar_id = arl_parent
       </sql>
    </item>    
    <item>
       <description>Create view view_ar_usage</description>
       <sql>
          CREATE VIEW view_ar_usage AS 
            SELECT ar_number AS ar_number,
                   aru_termination_time AS termination_time,
                   aru_qname AS queue,
                   aru_hostname AS hostname,
                   aru_slots AS slots
             FROM sge_ar, sge_ar_usage
             WHERE ar_id = aru_parent
       </sql>   
     </item>     
     <item>
        <description>Create view view_ar_resource_usage</description>
        <sql>
           CREATE VIEW view_ar_resource_usage AS
             SELECT ar_number AS ar_number,
                    arru_variable AS variable,
                    arru_value AS value
             FROM sge_ar, sge_ar_resource_usage
             WHERE ar_id = arru_parent
        </sql>        
     </item>     
     <item>
       <description>Create view view_ar_time_usage</description>
       <sql>
          CREATE VIEW view_ar_time_usage AS
            SELECT ART.ar_number AS ar_number, 
                   SUM(job_duration)::interval AS job_duration,                   
                   (ART.end_time - ART.start_time)::interval AS ar_duration
            FROM view_ar_attribute ART LEFT OUTER JOIN view_job_times ACC 
            ON (ART.ar_number = ACC.ar_number) 
            GROUP BY ART.ar_number, ar_duration ORDER BY ART.ar_number
       </sql>
    </item> 
    <item>
        <description>Update version table</description>
        <sql>
          INSERT INTO sge_version (v_id, v_version, v_time)
            VALUES(6, '6.2', current_timestamp)
        </sql>
     </item>
    
    <!-- ============== privileges ========================================== -->
    
    <item>
       <description>grant privileges on sge_ar to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_ar TO {READ_USER}</sql>
     </item>
     <item>
       <description>grant privileges on sge_ar_attribute to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_ar_attribute TO {READ_USER}</sql>
     </item>
     <item>
       <description>grant privileges on sge_ar_usage to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_ar_usage TO {READ_USER}</sql>
     </item>
     <item>
       <description>grant privileges on sge_ar_log to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_ar_log TO {READ_USER}</sql>
     </item>
     <item>
       <description>grant privileges on sge_ar_resource_usage to {READ_USER}</description>
       <sql>GRANT SELECT ON sge_ar_resource_usage TO {READ_USER}</sql>
     </item>
     <item>
       <description>grant privileges on view_accounting {READ_USER}</description>
       <sql>GRANT SELECT ON view_accounting TO {READ_USER}</sql>
     </item>
     <item>
       <description>grant privileges on view_job_times to {READ_USER}</description>
       <sql>GRANT SELECT ON view_job_times TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on view_ar_attribute to {READ_USER}</description>
       <sql>GRANT SELECT ON view_ar_attribute TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on view_ar_log to {READ_USER}</description>
       <sql>GRANT SELECT ON view_ar_log TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on view_ar_usage to {READ_USER}</description>
       <sql>GRANT SELECT ON view_ar_usage TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on view_ar_resource_usage to {READ_USER}</description>
       <sql>GRANT SELECT ON view_ar_resource_usage TO {READ_USER}</sql>
    </item>
    <item>
       <description>grant privileges on view_ar_time_usage to {READ_USER}</description>
       <sql>GRANT SELECT ON view_ar_time_usage TO {READ_USER}</sql>
    </item>
</version>

  
   
</DBModel>
