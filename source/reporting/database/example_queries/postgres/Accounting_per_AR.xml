<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--

#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2007 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

-->
<Query tableName="" category="Accounting" name="Accounting per AR" type="advanced">
   <description>Shows the monthly accounting per Advance Reservation for the interval of one year.</description>   
    <view>
        <description visible="true"/>
        <parameter/>
        <sql visible="true"/>
        <pivot order="0">
            <row>ar_number</row>
            <column>time</column>
            <data>cpu</data>
            <data>mem</data>
            <data>io</data>
        </pivot>
    </view>
    <sql>SELECT time, ar_number, cpu, mem, io 
	 FROM (SELECT date_trunc('month', start_time)::date AS time, 
		      ar_number, 
		      SUM(cpu) AS cpu, 
		      SUM(mem) AS mem, 
	              SUM(io)  AS io 
	       FROM view_accounting 
	       WHERE start_time &gt; (current_timestamp - interval '1 year')
               AND ar_number > 0
	       GROUP BY time, ar_number) AS tmp</sql>
</Query>


